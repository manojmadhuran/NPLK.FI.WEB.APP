@model FI.PORTAL.ViewModels.CustomerRegistrationRequestData

@{
    var title = Model.RequestHeader.CusReqID;
    ViewBag.Title = "Req:" + title;
}

@{
    int role = Convert.ToInt16(Session["role"].ToString());
}

@if ((role == 1 && Model.RequestHeader.CurrentStat.Equals("pendingCO")) || (role == 5 && Model.RequestHeader.CurrentStat.Equals("pendingCM")) || (role == 6 && Model.RequestHeader.CurrentStat.Equals("pendingFM")) || (role == 7 && Model.RequestHeader.CurrentStat.Equals("pendingGM")))
{<div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-sm text-sm-center">
                    <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#reverseModal">
                        Reverse
                    </button>
                </div>
                @if (role != 1)
                {
                    <div class="col-sm text-sm-center">
                        <button type="button" class="btn btn-success btn-sm" data-toggle="modal" data-target="#approveModal">
                            Approve
                        </button>
                    </div>
                }

                @if (role != 7)
                {
                    <div class="col-sm text-sm-center">
                        <button type="button" class="btn btn-warning btn-sm" data-toggle="modal" data-target="#forwardModal">
                            Forward
                        </button>
                    </div>
                }

            </div>
        </div>
    </div>
}


<!-- Approve Modal -->
<div class="modal fade" id="approveModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Approve Request</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @using (Html.BeginForm("ApproveRequest", "CustomerRegistration", FormMethod.Post))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @Html.HiddenFor(s => s.FinalApprove.CusReqID, new { Value = Model.RequestHeader.CusReqID })
                        @Html.HiddenFor(s => s.FinalApprove.SalesCode, new { Value = Model.RequestHeader.SalesCode })

                        @Html.HiddenFor(s => s.RequestHeader.CusReqID)
                        @Html.HiddenFor(s => s.RequestHeader.CreatedDate)
                        @Html.HiddenFor(s => s.RequestHeader.CusName)
                        @Html.HiddenFor(s => s.RequestHeader.CusAddress)
                        @Html.HiddenFor(s => s.RequestHeader.CusTel)
                        @Html.HiddenFor(s => s.RequestHeader.CusFax)
                        @Html.HiddenFor(s => s.RequestHeader.CusEmail)
                        @Html.HiddenFor(s => s.RequestHeader.DelAddress)
                        @Html.HiddenFor(s => s.RequestHeader.DelTel)
                        @Html.HiddenFor(s => s.RequestHeader.DelFax)
                        @Html.HiddenFor(s => s.RequestHeader.DelEmail)
                        @Html.HiddenFor(s => s.RequestHeader.SalesCode)
                        @Html.HiddenFor(s => s.RequestHeader.SalesAreaName)
                        @Html.HiddenFor(s => s.RequestHeader.VatRegNo)
                        @Html.HiddenFor(s => s.RequestHeader.DateofInitialCusVisit)
                        @Html.HiddenFor(s => s.RequestHeader.PersonDealWith)
                        @Html.HiddenFor(s => s.RequestHeader.DateQuotationSent)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessNature)
                        @Html.HiddenFor(s => s.RequestHeader.OtherDesc)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessDuration)
                        @Html.HiddenFor(s => s.RequestHeader.PaintStockValue)
                        @Html.HiddenFor(s => s.RequestHeader.PaintMonthlyTakeOff)
                        @Html.HiddenFor(s => s.RequestHeader.OtherStockValue)
                        @Html.HiddenFor(s => s.RequestHeader.OtherMonthlyTakeOff)
                        @Html.HiddenFor(s => s.RequestHeader.CusFinanceStability)
                        @Html.HiddenFor(s => s.RequestHeader.CusPayStrength)
                        @Html.HiddenFor(s => s.RequestHeader.InitialOrder)
                        @Html.HiddenFor(s => s.RequestHeader.FirstAvgSales)
                        @Html.HiddenFor(s => s.RequestHeader.NextAvgSales)
                        @Html.HiddenFor(s => s.RequestHeader.EstiPurchase)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessRegCert)
                        @Html.HiddenFor(s => s.RequestHeader.VatRegCert)
                        @Html.HiddenFor(s => s.RequestHeader.IDofOwner)
                        @Html.HiddenFor(s => s.RequestHeader.Form20)
                        @Html.HiddenFor(s => s.RequestHeader.BankStatments)
                        @Html.HiddenFor(s => s.RequestHeader.Business_Place)
                        @Html.HiddenFor(s => s.RequestHeader.Application_Form)
                        @Html.HiddenFor(s => s.RequestHeader.Level)


                        @if (role == 5)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "approvedByCM" })
                            @Html.HiddenFor(s => s.FinalApprove.Role, new { Value = "CM" })
                        }
                        else if (role == 6)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "approvedByFM" })
                            @Html.HiddenFor(s => s.FinalApprove.Role, new { Value = "FM" })
                        }
                        else if (role == 7)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "approvedByGM" })
                            @Html.HiddenFor(s => s.FinalApprove.Role, new { Value = "GM" })
                        }


                        <label>01. Completeness of Credit Customer Registration Application Form</label>
                        @Html.CheckBoxFor(s => s.FinalApprove.CompletenessCustomerRegForm)
                    </div>

                    <div class="form-group">
                        <label>02. Receiving / Attaching All Relevant Copies of Documents</label>
                        @Html.CheckBoxFor(s => s.FinalApprove.AllRelevantDocCopies)
                    </div>

                    <div class="form-group">
                        <label>03. Completeness of Credit Customer Evaluation Form - A</label>
                        @Html.CheckBoxFor(s => s.FinalApprove.FormA)
                    </div>

                    <div class="form-group">
                        <label>04. Completeness of Credit Customer Evaluation Form - B</label>
                        @Html.CheckBoxFor(s => s.FinalApprove.FormB)
                    </div>

                    <div class="row">
                        <div class="col-sm-8">
                            <label>05. Customer Verification Made by Credit Control Division</label>
                        </div>
                    </div>
                    <ul>
                        <li><label>Date of Verfication: </label> @Html.TextBoxFor(s => s.FinalApprove.DateofVerification, new { @class = "form-control" })</li>
                        <li><label>Person Contacted: </label> @Html.TextBoxFor(s => s.FinalApprove.PersonContacted, new { @class = "form-control" })</li>
                        <li><label>Method of Verfication: </label> @Html.TextBoxFor(s => s.FinalApprove.MethodOfVerification, new { @class = "form-control" })</li>
                        <li><label>Comments: </label> @Html.TextBoxFor(s => s.FinalApprove.Comments, new { @class = "form-control" })</li>
                    </ul>

                    <div class="form-group">
                        <label>Credit Limit: </label>
                        @Html.TextBoxFor(s => s.FinalApprove.RecLimit)
                    </div>

                    <div class="form-group">
                        <label>Credit Period: </label>
                        @Html.TextBoxFor(s => s.FinalApprove.RecPeriod)
                    </div>

                    <div class="form-group">
                        <label>Discount: </label>
                        @Html.TextBoxFor(s => s.FinalApprove.RecDiscount)
                    </div>

                    <div class="form-group">
                        <label>Remarks: </label>
                        @Html.TextBoxFor(s => s.FinalApprove.Remarks)
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            }

        </div>
    </div>
</div>

<!-- Reverse Modal -->
<div class="modal fade" id="reverseModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Reverse Request</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @using (Html.BeginForm("ReverseOrApproveRequest", "CustomerRegistration", FormMethod.Post))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @if (role == 1)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "declineCO" })
                            @Html.HiddenFor(s => s.Evaluation.Role, new { Value = "CO" })
                        }
                        else if (role == 5)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "pendingCO" })
                            @Html.HiddenFor(s => s.Evaluation.Role, new { Value = "CM" })
                        }
                        else if (role == 6)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "pendingCM" })
                            @Html.HiddenFor(s => s.Evaluation.Role, new { Value = "FM" })
                        }
                        else if (role == 7)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "pendingFM" })
                            @Html.HiddenFor(s => s.Evaluation.Role, new { Value = "GM" })
                        }

                        @Html.HiddenFor(s => s.RequestHeader.CusReqID)
                        @Html.HiddenFor(s => s.RequestHeader.CreatedDate)
                        @Html.HiddenFor(s => s.RequestHeader.CusName)
                        @Html.HiddenFor(s => s.RequestHeader.CusAddress)
                        @Html.HiddenFor(s => s.RequestHeader.CusTel)
                        @Html.HiddenFor(s => s.RequestHeader.CusFax)
                        @Html.HiddenFor(s => s.RequestHeader.CusEmail)
                        @Html.HiddenFor(s => s.RequestHeader.DelAddress)
                        @Html.HiddenFor(s => s.RequestHeader.DelTel)
                        @Html.HiddenFor(s => s.RequestHeader.DelFax)
                        @Html.HiddenFor(s => s.RequestHeader.DelEmail)
                        @Html.HiddenFor(s => s.RequestHeader.SalesCode)
                        @Html.HiddenFor(s => s.RequestHeader.SalesAreaName)
                        @Html.HiddenFor(s => s.RequestHeader.VatRegNo)
                        @Html.HiddenFor(s => s.RequestHeader.DateofInitialCusVisit)
                        @Html.HiddenFor(s => s.RequestHeader.PersonDealWith)
                        @Html.HiddenFor(s => s.RequestHeader.DateQuotationSent)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessNature)
                        @Html.HiddenFor(s => s.RequestHeader.OtherDesc)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessDuration)
                        @Html.HiddenFor(s => s.RequestHeader.PaintStockValue)
                        @Html.HiddenFor(s => s.RequestHeader.PaintMonthlyTakeOff)
                        @Html.HiddenFor(s => s.RequestHeader.OtherStockValue)
                        @Html.HiddenFor(s => s.RequestHeader.OtherMonthlyTakeOff)
                        @Html.HiddenFor(s => s.RequestHeader.CusFinanceStability)
                        @Html.HiddenFor(s => s.RequestHeader.CusPayStrength)
                        @Html.HiddenFor(s => s.RequestHeader.InitialOrder)
                        @Html.HiddenFor(s => s.RequestHeader.FirstAvgSales)
                        @Html.HiddenFor(s => s.RequestHeader.NextAvgSales)
                        @Html.HiddenFor(s => s.RequestHeader.EstiPurchase)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessRegCert)
                        @Html.HiddenFor(s => s.RequestHeader.VatRegCert)
                        @Html.HiddenFor(s => s.RequestHeader.IDofOwner)
                        @Html.HiddenFor(s => s.RequestHeader.Form20)
                        @Html.HiddenFor(s => s.RequestHeader.BankStatments)
                        @Html.HiddenFor(s => s.RequestHeader.Business_Place)
                        @Html.HiddenFor(s => s.RequestHeader.Application_Form)
                        @Html.HiddenFor(s => s.RequestHeader.Level)

                        @Html.HiddenFor(s => s.Evaluation.CusReqID, new { Value = Model.RequestHeader.CusReqID })
                        @Html.HiddenFor(s => s.Evaluation.SalesCode, new { Value = Model.RequestHeader.SalesCode })
                        @Html.HiddenFor(s => s.Evaluation.Status, new { Value = "Decline" })

                        <label>Credit Limit</label>
                        @Html.TextBoxFor(s => s.Evaluation.RecLimit, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Credit Period</label>
                        @Html.TextBoxFor(s => s.Evaluation.RecPeriod, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Discount</label>
                        @Html.TextBoxFor(s => s.Evaluation.RecDiscount, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Remarks</label>
                        @Html.TextBoxFor(s => s.Evaluation.Remarks, new { @class = "form-control" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            }

        </div>
    </div>
</div>

<!-- Forward Modal -->
<div class="modal fade" id="forwardModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Forward Request</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            @using (Html.BeginForm("ReverseOrApproveRequest", "CustomerRegistration", FormMethod.Post))
            {
                <div class="modal-body">
                    <div class="form-group">
                        @if (role == 1)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "pendingCM" })
                            @Html.HiddenFor(s => s.Evaluation.Role, new { Value = "CO" })
                            @Html.HiddenFor(s => s.RequestHeader.Level, new { Value = 6 })
                        }
                        else if (role == 5)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "pendingFM" })
                            @Html.HiddenFor(s => s.Evaluation.Role, new { Value = "CM" })
                            @Html.HiddenFor(s => s.RequestHeader.Level, new { Value = 7 })
                        }
                        else if (role == 6)
                        {
                            @Html.HiddenFor(s => s.RequestHeader.CurrentStat, new { Value = "pendingGM" })
                            @Html.HiddenFor(s => s.Evaluation.Role, new { Value = "FM" })
                            @Html.HiddenFor(s => s.RequestHeader.Level, new { Value = 8 })
                        }


                        @Html.HiddenFor(s => s.RequestHeader.CusReqID)
                        @Html.HiddenFor(s => s.RequestHeader.CreatedDate)
                        @Html.HiddenFor(s => s.RequestHeader.CusName)
                        @Html.HiddenFor(s => s.RequestHeader.CusAddress)
                        @Html.HiddenFor(s => s.RequestHeader.CusTel)
                        @Html.HiddenFor(s => s.RequestHeader.CusFax)
                        @Html.HiddenFor(s => s.RequestHeader.CusEmail)
                        @Html.HiddenFor(s => s.RequestHeader.DelAddress)
                        @Html.HiddenFor(s => s.RequestHeader.DelTel)
                        @Html.HiddenFor(s => s.RequestHeader.DelFax)
                        @Html.HiddenFor(s => s.RequestHeader.DelEmail)
                        @Html.HiddenFor(s => s.RequestHeader.SalesCode)
                        @Html.HiddenFor(s => s.RequestHeader.SalesAreaName)
                        @Html.HiddenFor(s => s.RequestHeader.VatRegNo)
                        @Html.HiddenFor(s => s.RequestHeader.DateofInitialCusVisit)
                        @Html.HiddenFor(s => s.RequestHeader.PersonDealWith)
                        @Html.HiddenFor(s => s.RequestHeader.DateQuotationSent)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessNature)
                        @Html.HiddenFor(s => s.RequestHeader.OtherDesc)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessDuration)
                        @Html.HiddenFor(s => s.RequestHeader.PaintStockValue)
                        @Html.HiddenFor(s => s.RequestHeader.PaintMonthlyTakeOff)
                        @Html.HiddenFor(s => s.RequestHeader.OtherStockValue)
                        @Html.HiddenFor(s => s.RequestHeader.OtherMonthlyTakeOff)
                        @Html.HiddenFor(s => s.RequestHeader.CusFinanceStability)
                        @Html.HiddenFor(s => s.RequestHeader.CusPayStrength)
                        @Html.HiddenFor(s => s.RequestHeader.InitialOrder)
                        @Html.HiddenFor(s => s.RequestHeader.FirstAvgSales)
                        @Html.HiddenFor(s => s.RequestHeader.NextAvgSales)
                        @Html.HiddenFor(s => s.RequestHeader.EstiPurchase)
                        @Html.HiddenFor(s => s.RequestHeader.BusinessRegCert)
                        @Html.HiddenFor(s => s.RequestHeader.VatRegCert)
                        @Html.HiddenFor(s => s.RequestHeader.IDofOwner)
                        @Html.HiddenFor(s => s.RequestHeader.Form20)
                        @Html.HiddenFor(s => s.RequestHeader.BankStatments)
                        @Html.HiddenFor(s => s.RequestHeader.Business_Place)
                        @Html.HiddenFor(s => s.RequestHeader.Application_Form)

                        @Html.HiddenFor(s => s.Evaluation.CusReqID, new { Value = Model.RequestHeader.CusReqID })
                        @Html.HiddenFor(s => s.Evaluation.SalesCode, new { Value = Model.RequestHeader.SalesCode })
                        @Html.HiddenFor(s => s.Evaluation.Status, new { Value = "Forward" })

                        <label>Credit Limit</label>
                        @Html.TextBoxFor(s => s.Evaluation.RecLimit, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Credit Period</label>
                        @Html.TextBoxFor(s => s.Evaluation.RecPeriod, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Discount</label>
                        @Html.TextBoxFor(s => s.Evaluation.RecDiscount, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Remarks</label>
                        @Html.TextBoxFor(s => s.Evaluation.Remarks, new { @class = "form-control" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            }

        </div>
    </div>
</div>


@if (Model.RequestFinalApproval.Any())
{
    <div class="row">
        <div class="col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <span class="badge bg-success">Approved</span>
                        </div>
                        <div class="col-sm-6">
                            <b>Approved By: </b>@Model.RequestFinalApproval.First().Role
                        </div>
                    </div>

                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <p class="card-text">
                                <b>Person Contacted: </b> @Model.RequestFinalApproval.First().PersonContacted
                            </p>
                        </div>
                        <div class="col-sm-6">
                            <p class="card-text">
                                <b>Method of Verification: </b> @Model.RequestFinalApproval.First().MethodOfVerification
                            </p>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <p class="card-text">
                                <b>Comments: </b> @Model.RequestFinalApproval.First().Comments
                            </p>
                        </div>
                        <div class="col-sm-6">
                            <p class="card-text">
                                <b>Created Date: </b> @Model.RequestFinalApproval.First().CreatedDate
                            </p>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-sm-12">
                            <p class="card-text">
                                <b>Date of Verification: </b> @Model.RequestFinalApproval.First().DateofVerification
                            </p>
                        </div>
                    </div>

                    <div class="dropdown-divider"></div>


                    <div class="row">
                        <div class="col-sm-6">
                            <p class="card-text">
                                <b>Credit Limit: </b> @Model.RequestFinalApproval.First().RecLimit
                            </p>
                        </div>
                        <div class="col-sm-6">
                            <p class="card-text">
                                <b>Credit Period: </b> @Model.RequestFinalApproval.First().RecPeriod
                            </p>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <p class="card-text">
                                <b>Discount: </b> @Model.RequestFinalApproval.First().RecDiscount
                            </p>
                        </div>
                        <div class="col-sm-6">
                            <p class="card-text">
                                <b>Remarks: </b> @Model.RequestFinalApproval.First().Remarks
                            </p>
                        </div>
                    </div>


                    <div class="dropdown-divider"></div>


                    <div class="row">
                        <div class="col-sm-6">
                            <p class="card-text">
                                @if (Model.RequestFinalApproval.First().CompletenessCustomerRegForm == true)
                                {<span class="badge badge-success">✓</span> }
                                else
                                {<span class="badge badge-danger">✘</span>}
                                Completeness of Credit Customer Registration Application Form
                            </p>
                        </div>
                        <div class="col-sm-6">
                            <p class="card-text">
                                @if (Model.RequestFinalApproval.First().AllRelevantDocCopies == true)
                                {<span class="badge badge-success">✓</span> }
                                else
                                {<span class="badge badge-danger">✘</span>}
                                Receiving / Attaching All Relevant Copies of Documents
                            </p>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <p class="card-text">
                                @if (Model.RequestFinalApproval.First().FormA == true)
                                {<span class="badge badge-success">✓</span> }
                                else
                                {<span class="badge badge-danger">✘</span>}
                                Completeness of Credit Customer Evaluation Form - A
                            </p>
                        </div>
                        <div class="col-sm-6">
                            <p class="card-text">
                                @if (Model.RequestFinalApproval.First().FormB == true)
                                {<span class="badge badge-success">✓</span> }
                                else
                                {<span class="badge badge-danger">✘</span>}
                                Completeness of Credit Customer Evaluation Form - B
                            </p>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}


<div class="row">
    <div class="col-sm-6">
        <div class="card">
            <div class="card-body">
                <p class="card-text"><b>Request ID:</b> @Model.RequestHeader.CusReqID</p>
                <p class="card-text"><b>Customer Name:</b> @Model.RequestHeader.CusName</p>
                <p class="card-text"><b>Customer Address:</b> @Model.RequestHeader.CusAddress</p>
                <p class="card-text"><b>Customer Telephone:</b> @Model.RequestHeader.CusTel</p>
                <p class="card-text"><b>Customer Fax:</b> @Model.RequestHeader.CusFax</p>
                <p class="card-text"><b>Customer Email:</b> @Model.RequestHeader.CusEmail</p>
                <p class="card-text"><b>Factory Address:</b> @Model.RequestHeader.DelAddress</p>
                <p class="card-text"><b>Factory Telephone:</b> @Model.RequestHeader.DelTel</p>
                <p class="card-text"><b>Factory Fax:</b> @Model.RequestHeader.DelFax</p>
                <p class="card-text"><b>Factory Email:</b> @Model.RequestHeader.DelEmail</p>
                <p class="card-text"><b>Sales Area:</b> @Model.RequestHeader.SalesCode</p>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="card">
            <div class="card-body">
                <p class="card-text"><b>VAT Registraion No:</b> @Model.RequestHeader.VatRegNo</p>
                <p class="card-text"><b>Date of Initial customer Visit:</b> @Model.RequestHeader.DateofInitialCusVisit</p>
                <p class="card-text"><b>Name of the Person Deal with:</b> @Model.RequestHeader.PersonDealWith</p>
                <p class="card-text"><b>Date of Quotation Sent</b> @Model.RequestHeader.DateQuotationSent</p>
                <p class="card-text">
                    <b>Nature of the Business:</b> @if (Model.RequestHeader.BusinessNature.Equals("Other"))
                    {@Model.RequestHeader.OtherDesc }
                else
                { @Model.RequestHeader.BusinessNature}
                </p>
                <p class="card-text"><b>How Long Business Operates:</b> @Model.RequestHeader.BusinessDuration</p>
                <p class="card-text"><b>Size of the Business:</b></p>
                <ul>
                    <li>
                        Paints:
                        <ul>
                            <li>Stock Value Rs: @Model.RequestHeader.PaintStockValue</li>
                            <li>Monthly Off Take Value Rs: @Model.RequestHeader.PaintMonthlyTakeOff</li>
                        </ul>

                    </li>

                    <li>
                        Others:
                        <ul>
                            <li>Stock Value Rs: @Model.RequestHeader.OtherStockValue</li>
                            <li>Monthly Off Take Value Rs: @Model.RequestHeader.OtherMonthlyTakeOff</li>
                        </ul>
                    </li>
                </ul>

            </div>

        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-6">
        <div class="card">
            <div class="card-body">
                <p class="card-text"><b>Main Paint Brands Available</b></p>
                <table class="table table-bordered small">
                    <tr>
                        <th>Brand</th>
                        <th>Stock Value (Rs.)</th>
                        <th>Monthly Off Take Val (Rs.)</th>
                    </tr>
                    @foreach (var item in Model.RequestPaintBrands)
                    {
                        <tr>
                            <td>@item.PaintBrand</td>
                            <td>@item.StockVal</td>
                            <td>@item.MonthlyTOVal</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="card">
            <div class="card-body">
                <p class="card-text"><b>Credit Offered by Other Companies</b></p>
                <table class="table table-bordered small">
                    <tr>
                        <th>Company</th>
                        <th>Credit Limit (Rs.)</th>
                        <th>Credit Period (Rs.)</th>
                        <th>Discount</th>
                    </tr>
                    @foreach (var item in Model.RequestCompanies)
                    {
                        <tr>
                            <td>@item.Company</td>
                            <td>@item.CreditLimit</td>
                            <td>@item.CreditPeriod</td>
                            <td>@item.Discount</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-body">
                <p class="card-text"><b>Evaluations History</b></p>
                <table class="table table-bordered small">
                    <tr>
                        <th>Evaluation ID</th>
                        <th>Requested Credit Limit (Rs.)</th>
                        <th>Requested Credit Period</th>
                        <th>Requested Discount</th>
                        <th>Remarks</th>
                        <th>By</th>
                        <th>Created Date</th>
                        <th>Status</th>
                    </tr>Model
                    @foreach (var item in Model.RequestEvaluations)
                    {
                        <tr>
                            <td>@item.EvalID</td>
                            <td>@item.RecLimit</td>
                            <td>@item.RecPeriod</td>
                            <td>@item.RecDiscount</td>
                            <td>@item.Remarks</td>
                            <td>@item.Role</td>
                            <td>@item.CreatedDate</td>
                            <td>@item.Status</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>

</div>

<div class="row">
    <div class="col-sm-6">
        <div class="card">
            <div class="card-body">
                <p class="card-text"><b>Customer Financial/Wealth Stability:</b> @Model.RequestHeader.CusFinanceStability</p>
                <p class="card-text"><b>Customer Payment Strength:</b> @Model.RequestHeader.CusPayStrength</p>
                <p>
                    <ul>
                        <li><b>Initial Order:</b> @Model.RequestHeader.InitialOrder</li>
                        <li><b>First 6 Months(Avg. Monthly Sale) Rs:</b> @Model.RequestHeader.FirstAvgSales</li>
                        <li><b>Next 6 Months(Avg. Monthly Sale) Rs:</b> @Model.RequestHeader.NextAvgSales</li>
                    </ul>
                </p>
                <p><b>Estimated Monthly Nippon Paint Purchase Rs:</b> @Model.RequestHeader.EstiPurchase</p>

            </div>
        </div>
    </div>
    <div class="col-sm-6">
        <div class="card">
            <div class="card-body">
                <p class="card-text"><b>Documents Attached:</b></p>
                <div class="row">
                    <div class="col-sm">
                        @if (Model.RequestHeader.BusinessRegCert == true)
                        {<span class="badge badge-success">✓</span> }
                        else
                        {<span class="badge badge-danger">✘</span>}
                        Copy of Business Reg. Certificates
                    </div>
                    <div class="col-sm">
                        @if (Model.RequestHeader.VatRegCert == true)
                        {<span class="badge badge-success">✓</span> }
                        else
                        {<span class="badge badge-danger">✘</span>}
                        Copy of VAT Reg. Certificates
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm">
                        @if (Model.RequestHeader.IDofOwner == true)
                        {<span class="badge badge-success">✓</span> }
                        else
                        {<span class="badge badge-danger">✘</span>}
                        Copy of ID of Owners of the Business
                    </div>
                    <div class="col-sm">
                        @if (Model.RequestHeader.Form20 == true)
                        {<span class="badge badge-success">✓</span> }
                        else
                        {<span class="badge badge-danger">✘</span>}
                        Form 20
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm">
                        @if (Model.RequestHeader.BankStatments == true)
                        {<span class="badge badge-success">✓</span> }
                        else
                        {<span class="badge badge-danger">✘</span>}
                        Copies of Last 2 Months Bank Statements
                    </div>
                    <div class="col-sm">
                        @if (Model.RequestHeader.Business_Place == true)
                        {<span class="badge badge-success">✓</span> }
                        else
                        {<span class="badge badge-danger">✘</span>}
                        Pictures of Business Place
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm">
                        @if (Model.RequestHeader.Application_Form == true)
                        {<span class="badge badge-success">✓</span> }
                        else
                        {<span class="badge badge-danger">✘</span>}
                        Fully Completed Application Form by the Customer
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@{
    int image = 0;
}
<div class="row">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-body">
                <p class="card-text"><b>Images of Attached Documents:</b></p>
                @foreach (var item in Model.RequestImages)
                {
                    image = image + 1;

                    string modalID = "imageModal" + image.ToString();
                    string modalIDforButton = "#imageModal" + image.ToString();
                    string imageRotatePass = "#imageRotateModal" + image.ToString();
                    string imageRotate = "imageRotateModal" + image.ToString();


                    <button type="button" class="btn" data-toggle="modal" data-target=@modalIDforButton>
                        <img width="200" src="data:image/jpg;base64,@item.Image" />
                    </button>

                    <div class="modal fade  bd-example-modal-lg" id=@modalID tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content" id=@imageRotate >
                                <div class="modal-body">
                                    <img onclick="rotate('@imageRotatePass')" style="max-width:100%; max-height:100%;" src="data:image/jpg;base64,@item.Image" />
                                </div>
                            </div>
                        </div>
                    </div>
                }

                
            </div>
        </div>
    </div>
</div>

<script>
    let rotation = 0;
    function rotate(id) {
        rotation += 90; // add 90 degrees, you can change this as you want
        if (rotation === 360) {
            // 360 means rotate back to 0
            rotation = 0;
        }
        document.querySelector(id).style.transform = `rotate(${rotation}deg)`;
    }
</script>